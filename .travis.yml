language: node_js

node_js:
    - "10"

python:
    - "3.6"

services:
    - docker

sudo: required

cache:
    directories:
        - node_modules

env:
    - DEPLOY_PACKAGE=true
    - SOLIDITY_COVERAGE=true
    - SOLC_NIGHTLY=true

matrix:
    fast_finish: true
    allow_failures:
        - env: SOLIDITY_COVERAGE=true
        - env: SOLC_NIGHTLY=true

before_install:
    - npm install -g npm
    - npm install -g ganache-cli@~6.1.8 release-it greenkeeper-lockfile codacy-coverage
    - docker pull chainsecurity/securify
    - |
        if [ "${DEPLOY_PACKAGE}" = "true" ]; then
          sudo apt-get -y install python3-pip gnupg-agent
          gpg-agent --daemon --no-grab --write-env-file $HOME/.gpg-agent-info
          pip3 install --user twine six==1.10.0 wheel==0.31.0
          sudo apt-get install oracle-java8-set-default maven
          java -version
          mvn -version
          export WEB3J_VERSION=4.0.1
          curl -L -o web3j-${WEB3J_VERSION}.tar https://github.com/web3j/web3j/releases/download/v${WEB3J_VERSION}/web3j-${WEB3J_VERSION}.tar
          tar xf web3j-${WEB3J_VERSION}.tar
          ls -la
          echo "$PATH"
          export PATH="${PWD}/web3j-${WEB3J_VERSION}/bin:${PATH}"
          echo "$PATH"
          web3j version
          bash -x scripts/maven.sh
          echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
          echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust
        fi

before_script:
    - greenkeeper-lockfile-update
    - ganache-cli > ganache-cli.log &

script:
    - npm run lint
    - npm run test:cover
    - npm run report-coverage
    - npm run migrate
    - git status
    - git add package-lock.json
    - git diff-index --quiet HEAD || git commit -m "Travis update"
    - docker run -v $(pwd):/project chainsecurity/securify

after_script:
    - greenkeeper-lockfile-upload

notifications:
    email: false

deploy:
    - provider: npm
      email: "devops@oceanprotocol.com"
      api_key: ${NPM_TOKEN}
      skip_cleanup: true
      on:
          tags: true
          all_branches: true
          condition: $DEPLOY_PACKAGE = true

    - provider: script
      script: bash -x ./scripts/maven.sh && mvn clean deploy --settings .maven.xml -B -U -Prelease
      skip_cleanup: true
      on:
          tags: true
          all_branches: true
          condition: $DEPLOY_PACKAGE = true

    - provider: script
      script: bash -x ./scripts/deploy_pypi.sh
      skip_cleanup: true
      on:
          tags: true
          all_branches: true
          condition: $DEPLOY_PACKAGE = true

#   - provider: releases
#     api_key: ${GITHUB_OAUTH_TOKEN}
#     skip_cleanup: true
#     on:
#         tags: true
